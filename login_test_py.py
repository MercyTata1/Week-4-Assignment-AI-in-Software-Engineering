# -*- coding: utf-8 -*-
"""login_test.py

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1yIbA7qceo7nXEV0YiM5L1e3hbbcvp2k4
"""

# Setup (run once)
!pip install selenium
!apt-get update
!apt install -y chromium-chromedriver

# task2/login_test.py
from selenium import webdriver
from selenium.webdriver.common.by import By
from selenium.webdriver.support.ui import WebDriverWait
from selenium.webdriver.support import expected_conditions as EC
import time

# Configure browser
chrome_options = webdriver.ChromeOptions()
chrome_options.add_argument('--headless')
chrome_options.add_argument('--no-sandbox')
driver = webdriver.Chrome(options=chrome_options)

# Test data
test_cases = [
    {"username": "admin", "password": "correct123", "valid": True, "name": "Valid login"},
    {"username": "user", "password": "wrongpass", "valid": False, "name": "Invalid login"},
    {"username": "", "password": "", "valid": False, "name": "Empty credentials"}
]

# Run tests
for test in test_cases:
    driver.get("https://the-internet.herokuapp.com/login")  # Free test site

    # Find elements
    driver.find_element(By.ID, "username").send_keys(test["username"])
    driver.find_element(By.ID, "password").send_keys(test["password"])
    driver.find_element(By.CSS_SELECTOR, "button.radius").click()

    # Verify results
    # Use explicit wait instead of time.sleep()
    wait = WebDriverWait(driver, 10) # Wait for a maximum of 10 seconds

    if test["valid"]:
        try:
            wait.until(EC.presence_of_element_located((By.ID, "flash")))
            assert "Secure Area" in driver.page_source
            print(f"✅ {test['name']} - PASSED")
        except:
             print(f"❌ {test['name']} - FAILED (Secure Area not reached)")
    else:
        assert "Your username is invalid" in driver.page_source or "Login Page" in driver.page_source
        print(f"✅ {test['name']} - PASSED (blocked as expected)")

driver.quit()

